{"ast":null,"code":"// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nlet initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  // createSlice 객체를 인자로 생성한다\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return { ...state };\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","createStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"sources":["/Users/shinmunsu/Desktop/01-starting-project-redux/src/store/index.js"],"sourcesContent":["// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nimport { createStore } from \"redux\";\n\nlet initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  // createSlice 객체를 인자로 생성한다\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return { ...state };\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\nexport default store;\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAIC,YAAY,GAAG;EACjBC,OAAO,EAAE,CADQ;EAEjBC,WAAW,EAAE;AAFI,CAAnB;AAKA,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/B;EACAO,IAAI,EAAE,SAFyB;EAG/BJ,YAAY,EAAEA,YAHiB;EAI/BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CAHO;;IAIRO,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CANO;;IAORQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtB;MACAH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;IACD,CAVO;;IAWRC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;IACD;;EAbO;AAJqB,CAAD,CAAhC,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B;AAIA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}