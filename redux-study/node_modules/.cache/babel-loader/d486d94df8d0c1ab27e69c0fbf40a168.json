{"ast":null,"code":"// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nlet initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  // createSlice 객체를 인자로 생성한다\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return { ...state\n  };\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["/Users/shinmunsu/Desktop/01-starting-project-redux/src/store/index.js"],"sourcesContent":["// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nimport { createStore } from \"redux\";\n\nlet initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\ncreateSlice({\n  // createSlice 객체를 인자로 생성한다\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter() {},\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n  return { ...state };\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAIC,YAAY,GAAG;EACjBC,OAAO,EAAE,CADQ;EAEjBC,WAAW,EAAE;AAFI,CAAnB;AAKAJ,WAAW,CAAC;EACV;EACAK,IAAI,EAAE,SAFI;EAGVH,YAAY,EAAEA,YAHJ;EAIVI,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACL,OAAN;IACD,CAHO;;IAIRM,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACL,OAAN;IACD,CANO;;IAORO,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtB;MACAH,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;IACD,CAVO;;IAWRC,aAAa,GAAG,CAAE;;EAXV;AAJA,CAAD,CAAX;;AAmBA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCN,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXS,MAAW;;EACvD,IAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEI,KAAK,CAACJ;IAFd,CAAP;EAID;;EACD,IAAIO,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAD3B;MAELR,WAAW,EAAEI,KAAK,CAACJ;IAFd,CAAP;EAID;;EACD,IAAIO,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEI,KAAK,CAACJ;IAFd,CAAP;EAID;;EACD,IAAIO,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MACLX,WAAW,EAAE,CAACI,KAAK,CAACJ,WADf;MAELD,OAAO,EAAEK,KAAK,CAACL;IAFV,CAAP;EAID;;EACD,OAAO,EAAE,GAAGK;EAAL,CAAP;AACD,CA1BD;;AA4BA,MAAMQ,KAAK,GAAGf,WAAW,CAACa,cAAD,CAAzB;AAEA,eAAeE,KAAf"},"metadata":{},"sourceType":"module"}