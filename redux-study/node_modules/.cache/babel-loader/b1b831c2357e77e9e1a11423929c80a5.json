{"ast":null,"code":"// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"; // toolkit 상태관리\n// let initialCounterState = {\n//   counter: 0,\n//   showCounter: true,\n// };\n// const counterSlice = createSlice({\n//   // createSlice 객체를 인자로 생성한다\n//   name: \"counter\",\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// 일반 redux action 상태관리\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return { ...state };\n// };\n// configureStore 여러개의 리듀서 상태 관리를 위해 툴킷에서 재공하는 configureStore를 통해 store를 관리한다\n// const store = configureStore({\n//   counter: counterSlice.reducer,\n// });\n// 키값으로 구성되어 있는 action을 내보낸다\n// export const { increment, decrement, increase, toggleCounter } =\n//   counterSlice.action;\n// export const counterActions = counterSlice.actions;\n// export default store;\n\ncreateSlice({\n  name: \"authentication\",\n  initialState\n});","map":{"version":3,"names":["createSlice","configureStore","name","initialState"],"sources":["/Users/shinmunsu/Desktop/01-starting-project-redux/src/store/store.js"],"sourcesContent":["// redux 로직\n// redux 여러개의 상태 데이터 관리하기\n// npm install @reduxjs/toolkit 리덕스 툴킷 시작\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n// toolkit 상태관리\n// let initialCounterState = {\n//   counter: 0,\n//   showCounter: true,\n// };\n\n// const counterSlice = createSlice({\n//   // createSlice 객체를 인자로 생성한다\n//   name: \"counter\",\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       //action이 필요한 이유는 amount라는 payload 값이 발생했기 때문에\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n\n// 일반 redux action 상태관리\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return { ...state };\n// };\n\n// configureStore 여러개의 리듀서 상태 관리를 위해 툴킷에서 재공하는 configureStore를 통해 store를 관리한다\n// const store = configureStore({\n//   counter: counterSlice.reducer,\n// });\n\n// 키값으로 구성되어 있는 action을 내보낸다\n// export const { increment, decrement, increase, toggleCounter } =\n//   counterSlice.action;\n// export const counterActions = counterSlice.actions;\n\n// export default store;\n\ncreateSlice({\n  name: \"authentication\",\n  initialState,\n});\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEAD,WAAW,CAAC;EACVE,IAAI,EAAE,gBADI;EAEVC;AAFU,CAAD,CAAX"},"metadata":{},"sourceType":"module"}